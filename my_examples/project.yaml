- name: Create OpenStack component openstack cluster
  hosts: localhost
  tasks:
  - set_fact:
      g_ext_swp_9413: '{{ g_ext_swp }}'
  - set_fact:
      g_int_swp_3411: '{{ g_int_swp }}'
  - set_fact:
      g_int_host_1_3255: '{{ g_int_host_1 }}'
  - set_fact:
      g_int_host_2_6082: '{{ g_int_host_2 }}'
  - set_fact:
      g_os_host_4712: '{{ g_os_host }}'
  - set_fact:
      g_arch_host_3701: '{{ g_arch_host }}'
  - os_image_facts: {}
    register: facts_result
  - set_fact:
      target_objects: '{{ facts_result["ansible_facts"]["openstack_image"] }}'
    register: tmp_value
  - set_fact:
      target_objects_2548: '{{ target_objects }}'
  - set_fact:
      input_facts: '{{ target_objects_2548 }}'
  - set_fact:
      input_args_7079:
      - - name
        - properties
      - type: cumulus
  - set_fact:
      input_args: '{{ input_args_7079 }}'
  - include: artifacts/contains.yaml
  - set_fact:
      name: '{{ matched_object["name"] }}'
    register: tmp_value
  - set_fact:
      name_8072: '{{ name }}'
  - os_image_facts: {}
    register: facts_result
  - set_fact:
      target_objects: '{{ facts_result["ansible_facts"]["openstack_image"] }}'
    register: tmp_value
  - set_fact:
      target_objects_6510: '{{ target_objects }}'
  - set_fact:
      input_facts: '{{ target_objects_6510 }}'
  - set_fact:
      input_args_2059:
      - - name
        - properties
      - architecture: '{{ g_arch_host_3701 }}'
        type: '{{ g_os_host_4712 }}'
  - set_fact:
      input_args: '{{ input_args_2059 }}'
  - include: artifacts/contains.yaml
  - set_fact:
      name: '{{ matched_object["name"] }}'
    register: tmp_value
  - set_fact:
      name_1707: '{{ name }}'
  - os_image_facts: {}
    register: facts_result
  - set_fact:
      target_objects: '{{ facts_result["ansible_facts"]["openstack_image"] }}'
    register: tmp_value
  - set_fact:
      target_objects_8124: '{{ target_objects }}'
  - set_fact:
      input_facts: '{{ target_objects_8124 }}'
  - set_fact:
      input_args_5867:
      - - name
        - properties
      - architecture: '{{ g_arch_host_3701 }}'
        type: '{{ g_os_host_4712 }}'
  - set_fact:
      input_args: '{{ input_args_5867 }}'
  - include: artifacts/contains.yaml
  - set_fact:
      name: '{{ matched_object["name"] }}'
    register: tmp_value
  - set_fact:
      name_6786: '{{ name }}'
  - file:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      state: absent
  - file:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      state: touch
  - os_flavor_facts: {}
    register: node_filter_facts_raw
  - set_fact:
      input_facts: '{{ node_filter_facts_raw["ansible_facts"]["openstack_flavors"]
        }}'
  - set_fact:
      input_args:
        vcpus: 1
        disk: 50.0
        ram: 2048.0
  - include: artifacts/equals.yaml
  - set_fact:
      id_4265: '{{ matched_object["id"] }}'
  - name: Create OpenStack component server
    os_server:
      config_drive: false
      name: cumulus
      nics:
      - port-name: '{{ g_ext_swp_9413 }}'
      - port-name: '{{ g_int_swp_3411 }}'
      image: '{{ name_8072 }}'
      flavor: '{{ id_4265 }}'
    register: cumulus_server
    ignore_errors: 1
    async: true
  - os_flavor_facts: {}
    register: node_filter_facts_raw
  - set_fact:
      input_facts: '{{ node_filter_facts_raw["ansible_facts"]["openstack_flavors"]
        }}'
  - set_fact:
      input_args:
        vcpus: 1
        disk: 50.0
        ram: 2048.0
  - include: artifacts/equals.yaml
  - set_fact:
      id_2480: '{{ matched_object["id"] }}'
  - name: Create OpenStack component server
    os_server:
      config_drive: false
      name: custom_server_1
      nics:
      - port-name: '{{ g_int_host_2_6082 }}'
      flavor: '{{ id_2480 }}'
      image: '{{ name_1707 }}'
    register: custom_server_1_server
    ignore_errors: 1
    async: true
  - os_flavor_facts: {}
    register: node_filter_facts_raw
  - set_fact:
      input_facts: '{{ node_filter_facts_raw["ansible_facts"]["openstack_flavors"]
        }}'
  - set_fact:
      input_args:
        vcpus: 1
        disk: 50.0
        ram: 2048.0
  - include: artifacts/equals.yaml
  - set_fact:
      id_2220: '{{ matched_object["id"] }}'
  - name: Create OpenStack component server
    os_server:
      config_drive: false
      name: custom_server_0
      nics:
      - port-name: '{{ g_int_host_1_3255 }}'
      flavor: '{{ id_2220 }}'
      image: '{{ name_6786 }}'
    register: custom_server_0_server
    ignore_errors: 1
    async: true
  - name: Checking cumulus_server create openstack componentd
    async_status: jid={{ cumulus_server.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: cumulus_server.ansible_job_id is defined
  - name: Checking cumulus_server create openstack componentd
    async_status: jid={{ cumulus_server.results[item|int].ansible_job_id }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ cumulus_server.results|length - 1 }}
    when: cumulus_server.results is defined
  - name: Saving cumulus_server result
    set_fact:
      cumulus_server: '{{ async_result_status }}'
    when: cumulus_server.ansible_job_id is defined
  - name: Saving cumulus_server result
    set_fact:
      cumulus_server: '{{ async_result_status_list }}'
    when: cumulus_server.results is defined
  - set_fact:
      cumulus_server_list: '{{ cumulus_server_list | default([]) }} + [ "{{ item.id
        }}" ]'
    loop: '{{ cumulus_server.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      cumulus_server_list:
        cumulus_server_ids: '{{ cumulus_server_list }}'
    when: cumulus_server_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'cumulus_server_delete: {{ cumulus_server.id }}'
    when: cumulus_server.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ cumulus_server_list | to_nice_yaml }}'
    when: cumulus_server_list is defined
  - fail:
      msg: Variable cumulus_server is undefined! So it will not be deleted
    when: cumulus_server_list is undefined and cumulus_server.id is undefined
    ignore_errors: true
  - name: Checking custom_server_1_server create openstack componentd
    async_status: jid={{ custom_server_1_server.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: custom_server_1_server.ansible_job_id is defined
  - name: Checking custom_server_1_server create openstack componentd
    async_status: jid={{ custom_server_1_server.results[item|int].ansible_job_id }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ custom_server_1_server.results|length - 1 }}
    when: custom_server_1_server.results is defined
  - name: Saving custom_server_1_server result
    set_fact:
      custom_server_1_server: '{{ async_result_status }}'
    when: custom_server_1_server.ansible_job_id is defined
  - name: Saving custom_server_1_server result
    set_fact:
      custom_server_1_server: '{{ async_result_status_list }}'
    when: custom_server_1_server.results is defined
  - set_fact:
      custom_server_1_server_list: '{{ custom_server_1_server_list | default([]) }}
        + [ "{{ item.id }}" ]'
    loop: '{{ custom_server_1_server.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      custom_server_1_server_list:
        custom_server_1_server_ids: '{{ custom_server_1_server_list }}'
    when: custom_server_1_server_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'custom_server_1_server_delete: {{ custom_server_1_server.id }}'
    when: custom_server_1_server.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ custom_server_1_server_list | to_nice_yaml }}'
    when: custom_server_1_server_list is defined
  - fail:
      msg: Variable custom_server_1_server is undefined! So it will not be deleted
    when: custom_server_1_server_list is undefined and custom_server_1_server.id is
      undefined
    ignore_errors: true
  - name: Checking custom_server_0_server create openstack componentd
    async_status: jid={{ custom_server_0_server.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: custom_server_0_server.ansible_job_id is defined
  - name: Checking custom_server_0_server create openstack componentd
    async_status: jid={{ custom_server_0_server.results[item|int].ansible_job_id }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ custom_server_0_server.results|length - 1 }}
    when: custom_server_0_server.results is defined
  - name: Saving custom_server_0_server result
    set_fact:
      custom_server_0_server: '{{ async_result_status }}'
    when: custom_server_0_server.ansible_job_id is defined
  - name: Saving custom_server_0_server result
    set_fact:
      custom_server_0_server: '{{ async_result_status_list }}'
    when: custom_server_0_server.results is defined
  - set_fact:
      custom_server_0_server_list: '{{ custom_server_0_server_list | default([]) }}
        + [ "{{ item.id }}" ]'
    loop: '{{ custom_server_0_server.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      custom_server_0_server_list:
        custom_server_0_server_ids: '{{ custom_server_0_server_list }}'
    when: custom_server_0_server_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'custom_server_0_server_delete: {{ custom_server_0_server.id }}'
    when: custom_server_0_server.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ custom_server_0_server_list | to_nice_yaml }}'
    when: custom_server_0_server_list is defined
  - fail:
      msg: Variable custom_server_0_server is undefined! So it will not be deleted
    when: custom_server_0_server_list is undefined and custom_server_0_server.id is
      undefined
    ignore_errors: true
  - name: Create OpenStack component floating ip
    os_floating_ip:
      server: custom_server_0
    register: custom_server_0_floating_ip
    ignore_errors: 1
    async: true
  - name: Create OpenStack component floating ip
    os_floating_ip:
      server: custom_server_1
    register: custom_server_1_floating_ip
    ignore_errors: 1
    async: true
  - name: Create OpenStack component floating ip
    os_floating_ip:
      server: cumulus
    register: cumulus_floating_ip
    ignore_errors: 1
    async: true
  - name: Checking custom_server_0_floating_ip create openstack componentd
    async_status: jid={{ custom_server_0_floating_ip.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: custom_server_0_floating_ip.ansible_job_id is defined
  - name: Checking custom_server_0_floating_ip create openstack componentd
    async_status: jid={{ custom_server_0_floating_ip.results[item|int].ansible_job_id
      }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ custom_server_0_floating_ip.results|length - 1 }}
    when: custom_server_0_floating_ip.results is defined
  - name: Saving custom_server_0_floating_ip result
    set_fact:
      custom_server_0_floating_ip: '{{ async_result_status }}'
    when: custom_server_0_floating_ip.ansible_job_id is defined
  - name: Saving custom_server_0_floating_ip result
    set_fact:
      custom_server_0_floating_ip: '{{ async_result_status_list }}'
    when: custom_server_0_floating_ip.results is defined
  - set_fact:
      custom_server_0_floating_ip_list: '{{ custom_server_0_floating_ip_list | default([])
        }} + [ "{{ item.id }}" ]'
    loop: '{{ custom_server_0_floating_ip.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      custom_server_0_floating_ip_list:
        custom_server_0_floating_ip_ids: '{{ custom_server_0_floating_ip_list }}'
    when: custom_server_0_floating_ip_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'custom_server_0_floating_ip_delete: {{ custom_server_0_floating_ip.id
        }}'
    when: custom_server_0_floating_ip.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ custom_server_0_floating_ip_list | to_nice_yaml }}'
    when: custom_server_0_floating_ip_list is defined
  - fail:
      msg: Variable custom_server_0_floating_ip is undefined! So it will not be deleted
    when: custom_server_0_floating_ip_list is undefined and custom_server_0_floating_ip.id
      is undefined
    ignore_errors: true
  - name: Checking custom_server_1_floating_ip create openstack componentd
    async_status: jid={{ custom_server_1_floating_ip.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: custom_server_1_floating_ip.ansible_job_id is defined
  - name: Checking custom_server_1_floating_ip create openstack componentd
    async_status: jid={{ custom_server_1_floating_ip.results[item|int].ansible_job_id
      }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ custom_server_1_floating_ip.results|length - 1 }}
    when: custom_server_1_floating_ip.results is defined
  - name: Saving custom_server_1_floating_ip result
    set_fact:
      custom_server_1_floating_ip: '{{ async_result_status }}'
    when: custom_server_1_floating_ip.ansible_job_id is defined
  - name: Saving custom_server_1_floating_ip result
    set_fact:
      custom_server_1_floating_ip: '{{ async_result_status_list }}'
    when: custom_server_1_floating_ip.results is defined
  - set_fact:
      custom_server_1_floating_ip_list: '{{ custom_server_1_floating_ip_list | default([])
        }} + [ "{{ item.id }}" ]'
    loop: '{{ custom_server_1_floating_ip.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      custom_server_1_floating_ip_list:
        custom_server_1_floating_ip_ids: '{{ custom_server_1_floating_ip_list }}'
    when: custom_server_1_floating_ip_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'custom_server_1_floating_ip_delete: {{ custom_server_1_floating_ip.id
        }}'
    when: custom_server_1_floating_ip.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ custom_server_1_floating_ip_list | to_nice_yaml }}'
    when: custom_server_1_floating_ip_list is defined
  - fail:
      msg: Variable custom_server_1_floating_ip is undefined! So it will not be deleted
    when: custom_server_1_floating_ip_list is undefined and custom_server_1_floating_ip.id
      is undefined
    ignore_errors: true
  - name: Checking cumulus_floating_ip create openstack componentd
    async_status: jid={{ cumulus_floating_ip.ansible_job_id }}
    register: async_result_status
    until: async_result_status.finished
    retries: '60'
    delay: '5'
    when: cumulus_floating_ip.ansible_job_id is defined
  - name: Checking cumulus_floating_ip create openstack componentd
    async_status: jid={{ cumulus_floating_ip.results[item|int].ansible_job_id }}
    register: async_result_status_list
    until: async_result_status_list.finished or async_result_status_list.results[item].finished
      | default(0)
    retries: '60'
    delay: '5'
    with_sequence: start=0 end={{ cumulus_floating_ip.results|length - 1 }}
    when: cumulus_floating_ip.results is defined
  - name: Saving cumulus_floating_ip result
    set_fact:
      cumulus_floating_ip: '{{ async_result_status }}'
    when: cumulus_floating_ip.ansible_job_id is defined
  - name: Saving cumulus_floating_ip result
    set_fact:
      cumulus_floating_ip: '{{ async_result_status_list }}'
    when: cumulus_floating_ip.results is defined
  - set_fact:
      cumulus_floating_ip_list: '{{ cumulus_floating_ip_list | default([]) }} + [
        "{{ item.id }}" ]'
    loop: '{{ cumulus_floating_ip.results | flatten(levels=1)  }}'
    when: item.id  is defined
  - set_fact:
      cumulus_floating_ip_list:
        cumulus_floating_ip_ids: '{{ cumulus_floating_ip_list }}'
    when: cumulus_floating_ip_list is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: 'cumulus_floating_ip_delete: {{ cumulus_floating_ip.id }}'
    when: cumulus_floating_ip.id is defined
  - lineinfile:
      path: '{{ playbook_dir }}/id_vars_example.yaml'
      line: '{{ cumulus_floating_ip_list | to_nice_yaml }}'
    when: cumulus_floating_ip_list is defined
  - fail:
      msg: Variable cumulus_floating_ip is undefined! So it will not be deleted
    when: cumulus_floating_ip_list is undefined and cumulus_floating_ip.id is undefined
    ignore_errors: true
- name: Create OpenStack component cumulus_floating_ip server component
  hosts: cumulus
  tasks:
  - include: artifacts/configure_router.yaml
