tosca_definitions_version: tosca_simple_yaml_1_0
topology_template:
  inputs:
     ext_swp:
        type: string
     int_swp:
       type: string
     int_host_1:
       type: string
     int_host_2:
       type: string
     os_host:
       type: string
     arch_host:
       type: string
         
  node_templates:
    cumulus:
      type: tosca.nodes.Compute
      attributes:
        ports:
          external:
            port_name: { get_input: ext_swp }
          internal:
            port_name: { get_input: int_swp }
      capabilities:
        os:
          properties:
            type: cumulus
        host:
          properties:
            num_cpus: 1
            disk_size: 50 GiB
            mem_size: 2048 MiB
      interfaces:
        Standard:
          configure: 
            implementation: configure_router.yaml
            inputs:
                int_swp: { get_attribute:  [ cumulus, ports, internal, port_name ] }

    custom_server_0:
      type: tosca.nodes.Compute
      attributes:
        ports:
          internal:
            port_name: { get_input: int_host_1 }
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 50 GiB
            mem_size: 2048 MiB
        os:
          properties:
            architecture: { get_input: arch_host }
            type: { get_input: os_host }
      requirements:
        - to_cumulus:
            node: cumulus
            relationship: connected_to_cumulus
            
    custom_server_1:
      type: tosca.nodes.Compute
      attributes:
        ports:
          internal:
            port_name: { get_input: int_host_2 }
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 50 GiB
            mem_size: 2048 MiB
        os:
          properties:
            architecture: { get_input: arch_host }
            type: { get_input: os_host }
      requirements:
        - to_cumulus:
            node: cumulus
            relationship: connected_to_cumulus
        
  relationship_templates:
    connected_to_cumulus:
      type: tosca.relationships.DependsOn
      interfaces:
        Configure:
          post_configure_target:
            implementation: configure_conn.yaml
            inputs:
              int_swp: { get_attribute:  [ TARGET, ports.internal.port_name ] }
              int_host: { get_attribute:  [ SOURCE, ports.internal.port_name ] }
            
